#
#                 ▐▘▘  
# ▛▘▌▌▌▀▌▌▌  ▛▘▛▌▛▌▜▘▌▛▌
# ▄▌▚▚▘█▌▙▌  ▙▖▙▌▌▌▐ ▌▙▌
#        ▄▌           ▄▌
# Read `man 5 sway` for a complete reference.

### Variables
# Super key. Use Mod1 for Alt.
set $mod Mod4

set $left h
set $down j
set $up k
set $right l

# Terminal emulator
set $term foot

# Gruvbox colors
set $gruv_black #000000
set $gruv_grey0 #282828
set $gruv_grey1 #282828
set $gruv_grey2 #32302F
set $gruv_grey3 #504945
set $gruv_grey4 #665C54
set $gruv_white #FFFFFF
set $gruv_yellow0 #EEBD35
set $gruv_yellow1 #FABD2F
set $gruv_yellow2 #98971A
set $gruv_aqua0 #689D6A
set $gruv_aqua1 #8EC07C
set $gruv_orange #D65D0E
set $gruv_red0 #FB4934
set $gruv_red1 #CC241D
set $gruv_purple0 #D4879C
set $gruv_purple1 #B16286
set $gruv_blue0 #83A598
set $gruv_blue1 #7FA2AC
set $gruv_blue2 #458588
set $gruv_cream #E7D7AD

# Launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened on the original workspace that the command was run on.
set $menu tofi-run | xargs swaymsg exec --

# Power Menu
set $power_menu nwg-bar

### Output configuration
# wallpaper
output eDP-2 resolution 3840x2160 background ~/pictures/wallpapers/ark_fb_16_big.jpg fill #000000

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Visual
# Font
font pango:AnonymicePro Nerd Font 10

# Client Borders
default_border pixel 1
default_floating_border pixel 1
titlebar_padding 1
titlebar_border_thickness 0
smart_borders on

### Key bindings
# Basics:
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Open the power menu
    bindsym $mod+x exec $power_menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows. Change normal to inverse to use left mouse button for resizing and right mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'Exit Sway?' -B 'Yes, exit sway' 'swaymsg exit'

# Moving around:
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right

# Workspaces:
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.

# Input
    input * {
        # map capslock to escape, but shift+capslock is normal capslock
        xkb_options "caps:escape_shifted_capslock"
    }

# Layout stuff:
    # You can "split" the current object of your focus with $mod+b or $mod+v, for horizontal and vertical splits respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

# Scratchpad:
    # Sway has a "scratchpad", which is a bag of holding for windows. You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window. If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# Brightness
    bindsym XF86MonBrightnessUp exec brightnessctl set +1%
    bindsym XF86MonBrightnessDown exec brightnessctl set 1%-

# Audio
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1%
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Quick Launch Apps
    # snipping tool
    bindsym --no-repeat $mod+Shift+s exec grimshot --cursor copy area
    # screenshot
    bindsym --no-repeat Print exec grimshot copy output
    # calculator
    bindsym --no-repeat $mod+c exec galculator
    # password manager
    bindsym --no-repeat $mod+Shift+b exec bitwarden-desktop

# Apps to launch on the floating layer
    # galculator
    for_window [app_id="galculator"] floating enable

    # bitwarden-desktop
    for_window [app_id="Bitwarden"] floating enable
    for_window [app_id="Bitwarden"] resize set width 1600 height 800
    for_window [app_id="Bitwarden"] move position center

# Label apps running under XWayland
for_window [shell="xwayland"] title_format "[XWayland] %title"

# Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Status Bar:
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

# The user configuration is expected to contain include /etc/sway/config.d/* in order to apply configuration snippets from drop-in files.
# The sway package provides the 50-systemd-user.conf drop-in file, which imports several environment variables into the systemd user session and dbus.
# This is required for several applications such as xdg-desktop-portal-wlr.
include /etc/sway/config.d/*

# start udiskie (automount usb drives)
exec udiskie -t &

# start insync (google drive sync)
exec insync start &

